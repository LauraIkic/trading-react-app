/* tslint:disable */
/* eslint-disable */
/**
 * Auth & CoinInfo API
 * API for authentication and coin data
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrderCreateDto
 */
export interface OrderCreateDto {
    /**
     * 
     * @type {string}
     * @memberof OrderCreateDto
     */
    coinId: string;
    /**
     * 
     * @type {number}
     * @memberof OrderCreateDto
     */
    quantity: number;
    /**
     * 
     * @type {string}
     * @memberof OrderCreateDto
     */
    type: OrderCreateDtoTypeEnum;
}


/**
 * @export
 */
export const OrderCreateDtoTypeEnum = {
    Buy: 'BUY',
    Sell: 'SELL'
} as const;
export type OrderCreateDtoTypeEnum = typeof OrderCreateDtoTypeEnum[keyof typeof OrderCreateDtoTypeEnum];


/**
 * Check if a given object implements the OrderCreateDto interface.
 */
export function instanceOfOrderCreateDto(value: object): value is OrderCreateDto {
    if (!('coinId' in value) || value['coinId'] === undefined) return false;
    if (!('quantity' in value) || value['quantity'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function OrderCreateDtoFromJSON(json: any): OrderCreateDto {
    return OrderCreateDtoFromJSONTyped(json, false);
}

export function OrderCreateDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderCreateDto {
    if (json == null) {
        return json;
    }
    return {
        
        'coinId': json['coinId'],
        'quantity': json['quantity'],
        'type': json['type'],
    };
}

export function OrderCreateDtoToJSON(json: any): OrderCreateDto {
    return OrderCreateDtoToJSONTyped(json, false);
}

export function OrderCreateDtoToJSONTyped(value?: OrderCreateDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'coinId': value['coinId'],
        'quantity': value['quantity'],
        'type': value['type'],
    };
}

