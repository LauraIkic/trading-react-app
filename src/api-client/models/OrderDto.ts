/* tslint:disable */
/* eslint-disable */
/**
 * Auth & CoinInfo API
 * API for authentication and coin data
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrderDto
 */
export interface OrderDto {
    /**
     * 
     * @type {string}
     * @memberof OrderDto
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderDto
     */
    coinId?: string;
    /**
     * 
     * @type {number}
     * @memberof OrderDto
     */
    quantity?: number;
    /**
     * 
     * @type {number}
     * @memberof OrderDto
     */
    price?: number;
    /**
     * 
     * @type {string}
     * @memberof OrderDto
     */
    type?: OrderDtoTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof OrderDto
     */
    status?: OrderDtoStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof OrderDto
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderDto
     */
    referenceId?: string;
    /**
     * 
     * @type {number}
     * @memberof OrderDto
     */
    version?: number;
}


/**
 * @export
 */
export const OrderDtoTypeEnum = {
    Buy: 'BUY',
    Sell: 'SELL'
} as const;
export type OrderDtoTypeEnum = typeof OrderDtoTypeEnum[keyof typeof OrderDtoTypeEnum];

/**
 * @export
 */
export const OrderDtoStatusEnum = {
    Open: 'OPEN',
    Executed: 'EXECUTED',
    Cancelled: 'CANCELLED'
} as const;
export type OrderDtoStatusEnum = typeof OrderDtoStatusEnum[keyof typeof OrderDtoStatusEnum];


/**
 * Check if a given object implements the OrderDto interface.
 */
export function instanceOfOrderDto(value: object): value is OrderDto {
    return true;
}

export function OrderDtoFromJSON(json: any): OrderDto {
    return OrderDtoFromJSONTyped(json, false);
}

export function OrderDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'coinId': json['coinId'] == null ? undefined : json['coinId'],
        'quantity': json['quantity'] == null ? undefined : json['quantity'],
        'price': json['price'] == null ? undefined : json['price'],
        'type': json['type'] == null ? undefined : json['type'],
        'status': json['status'] == null ? undefined : json['status'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'referenceId': json['referenceId'] == null ? undefined : json['referenceId'],
        'version': json['version'] == null ? undefined : json['version'],
    };
}

export function OrderDtoToJSON(json: any): OrderDto {
    return OrderDtoToJSONTyped(json, false);
}

export function OrderDtoToJSONTyped(value?: OrderDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'coinId': value['coinId'],
        'quantity': value['quantity'],
        'price': value['price'],
        'type': value['type'],
        'status': value['status'],
        'userId': value['userId'],
        'referenceId': value['referenceId'],
        'version': value['version'],
    };
}

