/* tslint:disable */
/* eslint-disable */
/**
 * Auth & CoinInfo API
 * API for authentication and coin data
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PortfolioItemDto
 */
export interface PortfolioItemDto {
    /**
     * 
     * @type {string}
     * @memberof PortfolioItemDto
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof PortfolioItemDto
     */
    coinId?: string;
    /**
     * 
     * @type {string}
     * @memberof PortfolioItemDto
     */
    coinName?: string;
    /**
     * 
     * @type {string}
     * @memberof PortfolioItemDto
     */
    coinSymbol?: string;
    /**
     * 
     * @type {number}
     * @memberof PortfolioItemDto
     */
    quantity?: number;
    /**
     * 
     * @type {number}
     * @memberof PortfolioItemDto
     */
    averagePrice?: number;
    /**
     * 
     * @type {number}
     * @memberof PortfolioItemDto
     */
    currentPrice?: number;
}

/**
 * Check if a given object implements the PortfolioItemDto interface.
 */
export function instanceOfPortfolioItemDto(value: object): value is PortfolioItemDto {
    return true;
}

export function PortfolioItemDtoFromJSON(json: any): PortfolioItemDto {
    return PortfolioItemDtoFromJSONTyped(json, false);
}

export function PortfolioItemDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PortfolioItemDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'coinId': json['coinId'] == null ? undefined : json['coinId'],
        'coinName': json['coinName'] == null ? undefined : json['coinName'],
        'coinSymbol': json['coinSymbol'] == null ? undefined : json['coinSymbol'],
        'quantity': json['quantity'] == null ? undefined : json['quantity'],
        'averagePrice': json['averagePrice'] == null ? undefined : json['averagePrice'],
        'currentPrice': json['currentPrice'] == null ? undefined : json['currentPrice'],
    };
}

export function PortfolioItemDtoToJSON(json: any): PortfolioItemDto {
    return PortfolioItemDtoToJSONTyped(json, false);
}

export function PortfolioItemDtoToJSONTyped(value?: PortfolioItemDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'coinId': value['coinId'],
        'coinName': value['coinName'],
        'coinSymbol': value['coinSymbol'],
        'quantity': value['quantity'],
        'averagePrice': value['averagePrice'],
        'currentPrice': value['currentPrice'],
    };
}

