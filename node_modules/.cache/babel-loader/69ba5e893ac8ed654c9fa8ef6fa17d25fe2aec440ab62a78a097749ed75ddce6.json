{"ast":null,"code":"/* tslint:disable */\n/* eslint-disable */\n/**\n * Auth & Coin API\n * API for authentication and coin data\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as runtime from '../runtime';\nimport { AuthResponseDtoFromJSON, CoinDtoFromJSON, LoginRequestDtoToJSON, SignupRequestDtoToJSON } from '../models/index';\n/**\n * \n */\nexport class DefaultApi extends runtime.BaseAPI {\n  /**\n   * User login\n   */\n  async authLoginPostRaw(requestParameters, initOverrides) {\n    if (requestParameters['loginRequestDto'] == null) {\n      throw new runtime.RequiredError('loginRequestDto', 'Required parameter \"loginRequestDto\" was null or undefined when calling authLoginPost().');\n    }\n    const queryParameters = {};\n    const headerParameters = {};\n    headerParameters['Content-Type'] = 'application/json';\n    const response = await this.request({\n      path: `/auth/login`,\n      method: 'POST',\n      headers: headerParameters,\n      query: queryParameters,\n      body: LoginRequestDtoToJSON(requestParameters['loginRequestDto'])\n    }, initOverrides);\n    return new runtime.JSONApiResponse(response, jsonValue => AuthResponseDtoFromJSON(jsonValue));\n  }\n\n  /**\n   * User login\n   */\n  async authLoginPost(requestParameters, initOverrides) {\n    const response = await this.authLoginPostRaw(requestParameters, initOverrides);\n    return await response.value();\n  }\n\n  /**\n   * User signup\n   */\n  async authSignupPostRaw(requestParameters, initOverrides) {\n    if (requestParameters['signupRequestDto'] == null) {\n      throw new runtime.RequiredError('signupRequestDto', 'Required parameter \"signupRequestDto\" was null or undefined when calling authSignupPost().');\n    }\n    const queryParameters = {};\n    const headerParameters = {};\n    headerParameters['Content-Type'] = 'application/json';\n    const response = await this.request({\n      path: `/auth/signup`,\n      method: 'POST',\n      headers: headerParameters,\n      query: queryParameters,\n      body: SignupRequestDtoToJSON(requestParameters['signupRequestDto'])\n    }, initOverrides);\n    return new runtime.JSONApiResponse(response, jsonValue => AuthResponseDtoFromJSON(jsonValue));\n  }\n\n  /**\n   * User signup\n   */\n  async authSignupPost(requestParameters, initOverrides) {\n    const response = await this.authSignupPostRaw(requestParameters, initOverrides);\n    return await response.value();\n  }\n\n  /**\n   * Get a specific coin by ID\n   */\n  async coinIdGetRaw(requestParameters, initOverrides) {\n    if (requestParameters['id'] == null) {\n      throw new runtime.RequiredError('id', 'Required parameter \"id\" was null or undefined when calling coinIdGet().');\n    }\n    const queryParameters = {};\n    const headerParameters = {};\n    const response = await this.request({\n      path: `/coin/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters['id']))),\n      method: 'GET',\n      headers: headerParameters,\n      query: queryParameters\n    }, initOverrides);\n    return new runtime.JSONApiResponse(response, jsonValue => CoinDtoFromJSON(jsonValue));\n  }\n\n  /**\n   * Get a specific coin by ID\n   */\n  async coinIdGet(requestParameters, initOverrides) {\n    const response = await this.coinIdGetRaw(requestParameters, initOverrides);\n    return await response.value();\n  }\n\n  /**\n   * Get list of all coins\n   */\n  async readCoinsRaw(initOverrides) {\n    const queryParameters = {};\n    const headerParameters = {};\n    const response = await this.request({\n      path: `/coin`,\n      method: 'GET',\n      headers: headerParameters,\n      query: queryParameters\n    }, initOverrides);\n    return new runtime.JSONApiResponse(response, jsonValue => jsonValue.map(CoinDtoFromJSON));\n  }\n\n  /**\n   * Get list of all coins\n   */\n  async readCoins(initOverrides) {\n    const response = await this.readCoinsRaw(initOverrides);\n    return await response.value();\n  }\n}","map":{"version":3,"names":["runtime","AuthResponseDtoFromJSON","CoinDtoFromJSON","LoginRequestDtoToJSON","SignupRequestDtoToJSON","DefaultApi","BaseAPI","authLoginPostRaw","requestParameters","initOverrides","RequiredError","queryParameters","headerParameters","response","request","path","method","headers","query","body","JSONApiResponse","jsonValue","authLoginPost","value","authSignupPostRaw","authSignupPost","coinIdGetRaw","replace","encodeURIComponent","String","coinIdGet","readCoinsRaw","map","readCoins"],"sources":["/Users/lauraikic/Desktop/trading-fe/src/api-client/apis/DefaultApi.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * Auth & Coin API\n * API for authentication and coin data\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  AuthResponseDto,\n  CoinDto,\n  LoginRequestDto,\n  SignupRequestDto,\n} from '../models/index';\nimport {\n    AuthResponseDtoFromJSON,\n    AuthResponseDtoToJSON,\n    CoinDtoFromJSON,\n    CoinDtoToJSON,\n    LoginRequestDtoFromJSON,\n    LoginRequestDtoToJSON,\n    SignupRequestDtoFromJSON,\n    SignupRequestDtoToJSON,\n} from '../models/index';\n\nexport interface AuthLoginPostRequest {\n    loginRequestDto: LoginRequestDto;\n}\n\nexport interface AuthSignupPostRequest {\n    signupRequestDto: SignupRequestDto;\n}\n\nexport interface CoinIdGetRequest {\n    id: string;\n}\n\n/**\n * \n */\nexport class DefaultApi extends runtime.BaseAPI {\n\n    /**\n     * User login\n     */\n    async authLoginPostRaw(requestParameters: AuthLoginPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AuthResponseDto>> {\n        if (requestParameters['loginRequestDto'] == null) {\n            throw new runtime.RequiredError(\n                'loginRequestDto',\n                'Required parameter \"loginRequestDto\" was null or undefined when calling authLoginPost().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/auth/login`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: LoginRequestDtoToJSON(requestParameters['loginRequestDto']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AuthResponseDtoFromJSON(jsonValue));\n    }\n\n    /**\n     * User login\n     */\n    async authLoginPost(requestParameters: AuthLoginPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AuthResponseDto> {\n        const response = await this.authLoginPostRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * User signup\n     */\n    async authSignupPostRaw(requestParameters: AuthSignupPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AuthResponseDto>> {\n        if (requestParameters['signupRequestDto'] == null) {\n            throw new runtime.RequiredError(\n                'signupRequestDto',\n                'Required parameter \"signupRequestDto\" was null or undefined when calling authSignupPost().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/auth/signup`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: SignupRequestDtoToJSON(requestParameters['signupRequestDto']),\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => AuthResponseDtoFromJSON(jsonValue));\n    }\n\n    /**\n     * User signup\n     */\n    async authSignupPost(requestParameters: AuthSignupPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AuthResponseDto> {\n        const response = await this.authSignupPostRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get a specific coin by ID\n     */\n    async coinIdGetRaw(requestParameters: CoinIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CoinDto>> {\n        if (requestParameters['id'] == null) {\n            throw new runtime.RequiredError(\n                'id',\n                'Required parameter \"id\" was null or undefined when calling coinIdGet().'\n            );\n        }\n\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/coin/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters['id']))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => CoinDtoFromJSON(jsonValue));\n    }\n\n    /**\n     * Get a specific coin by ID\n     */\n    async coinIdGet(requestParameters: CoinIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CoinDto> {\n        const response = await this.coinIdGetRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Get list of all coins\n     */\n    async readCoinsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CoinDto>>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/coin`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CoinDtoFromJSON));\n    }\n\n    /**\n     * Get list of all coins\n     */\n    async readCoins(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CoinDto>> {\n        const response = await this.readCoinsRaw(initOverrides);\n        return await response.value();\n    }\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}