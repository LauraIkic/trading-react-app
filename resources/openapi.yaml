openapi: 3.0.3
info:
  title: Auth & CoinInfo API
  version: 1.0.0
  description: API for authentication and coin data

servers:
  - url: http://localhost:5456/api

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequestDto:
      type: object
      required:
        - mail
        - password
      properties:
        mail:
          type: string
          format: email
        password:
          type: string
          format: password

    SignupRequestDto:
      type: object
      required:
        - name
        - mail
        - password
      properties:
        name:
          type: string
        mail:
          type: string
          format: email
        password:
          type: string
          format: password

    AuthResponseDto:
      type: object
      properties:
        jwt:
          type: string
        status:
          type: boolean
        message:
          type: string
        isTwoFactorAuthEnabled:
          type: boolean
        session:
          nullable: true

    CoinDto:
      type: object
      properties:
        id:
          type: string
        symbol:
          type: string
        name:
          type: string
        image:
          type: string
        current_price:
          type: number
        market_cap:
          type: integer
        market_cap_rank:
          type: integer
        fully_diluted_valuation:
          type: integer
        total_volume:
          type: integer
        high_24h:
          type: number
        low_24h:
          type: number
        price_change_24h:
          type: number
        price_change_percentage_24h:
          type: number
        market_cap_change_24h:
          type: integer
        market_cap_change_percentage_24h:
          type: number
        circulating_supply:
          type: integer
        total_supply:
          type: integer
        max_supply:
          type: integer
        ath:
          type: number
        ath_change_percentage:
          type: number
        ath_date:
          type: string
          format: date-time
        atl:
          type: number
        atl_change_percentage:
          type: number
        atl_date:
          type: string
          format: date-time
        last_updated:
          type: string
          format: date-time

    WalletRequestDto:
      type: object
      required:
        - amount
        - type
      properties:
        amount:
          type: string
        type:
          type: string
          enum: [ DEPOSIT, WITHDRAW ]

    WalletResponseDto:
      type: object
      properties:
        id:
          type: string
        balance:
          type: number

    OrderCreateDto:
      type: object
      required:
        - coinId
        - quantity
        - type
      properties:
        coinId:
          type: string
        quantity:
          type: number
        type:
          type: string
          enum: [BUY, SELL]

    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        coinId:
          type: string
        quantity:
          type: number
          format: double
        price:
          type: number
          format: double
        type:
          type: string
          enum: [ BUY, SELL ]
        status:
          type: string
          enum: [ OPEN, EXECUTED, CANCELLED ]
        referenceId:
          type: string
          format: uuid
        version:
          type: integer
          format: int64

    PortfolioDto:
      type: object
      properties:
        id:
          type: string
        assets:
          type: array
          items:
            $ref: '#/components/schemas/Asset'

    Asset:
      type: object
      properties:
        id:
          type: string
        coinId:
          $ref: '#/components/schemas/CoinDto'
        quantity:
          type: number
        value:
          type: number

security: []  # Default no security globally (can be overridden per-path)

paths:
  /auth/login:
    post:
      summary: User login
      operationId: loginUser
      security: []   # Public route, no auth required
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDto'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponseDto'
        '401':
          description: Unauthorized

  /auth/signup:
    post:
      summary: User signup
      operationId: createUser
      security: []  # Public route, no auth required
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequestDto'
      responses:
        '201':
          description: Successful signup
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponseDto'
        '400':
          description: Bad request

  /api/coin:
    get:
      summary: Get list of all coins
      operationId: readCoins
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A list of coins
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoinDto'

  /coin/{id}:
    get:
      summary: Get a specific coin by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single coin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoinDto'
        '404':
          description: CoinInfo not found

  /api/wallet:
    get:
      summary: Get wallet balance
      operationId: readWallet
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Get wallet balance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletResponseDto'
    patch:
      summary: Add or withdraw money to/from wallet
      operationId: patchWallet
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalletRequestDto'
      responses:
        '200':
          description: Get wallet balance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletResponseDto'

  /api/order:
    get:
      summary: Get user orders
      operationId: readOrders
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: List of user orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
    post:
      summary: Create a new order
      operationId: createOrder
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreateDto'
      responses:
        '200':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request

  /api/portfolio:
    get:
      summary: Get user portfolio
      operationId: readPortfolio
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User portfolio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioDto'
        '401':
          description: Unauthorized
